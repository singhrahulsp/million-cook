<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<context:component-scan base-package="com.millioncook.myapp"/>
		
	<annotation-driven />
	<context:property-placeholder location="classpath:Application.properties" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<beans:bean name="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver"/>
    <beans:bean name="jsonTemplate" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"/>

	<!-- database info -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<!-- <beans:bean id="dataSource" class="com.webSecurityApp.helper.EncryptedDataSource"> -->

		<beans:property name="driverClassName" value="${database.driver}" />
		<beans:property name="url" value="${database.url}" />
		<beans:property name="username" value="${database.user}" />
		<beans:property name="password" value="${database.password}" />
		
	</beans:bean>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property  name="packagesToScan">
			<beans:list>
			<beans:value>com.millioncook.myapp.model</beans:value> 
				<!-- <beans:value>com.millioncook.myapp.model.User</beans:value> 
				<beans:value>com.millioncook.myapp.model.UserDetail</beans:value> 
				<beans:value>com.millioncook.myapp.model.UserAddress</beans:value> 
				<beans:value>com.millioncook.myapp.model.MstOffer</beans:value> 
				<beans:value>com.millioncook.myapp.model.OfferDetail</beans:value> 
				<beans:value>com.millioncook.myapp.model.OfferItemMenu</beans:value>  -->
			</beans:list>
		</beans:property>

		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>
				<beans:prop key="hibernate.current_session_context_class">org.hibernate.context.internal.ThreadLocalSessionContext</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
</beans:beans>
